<html>

<head>
<meta http-equiv="Content-Language" content="en-us">
<meta http-equiv="Content-Type" content="text/html; charset=windows-1252">
<title>Trajectory Planner</title>

</head>

<body>

<p><u><b><i><font face="Arial" size="4">Trajectory Planner Corner Rounding 
Settings</font></i></b></u></p>
<p>
<font face="Arial">The KMotionCNC Trajectory planner contains two 
parameters (Facet Angle and Corner Tolerance) that can be used to smooth paths 
generated by line segments in the GCode.&nbsp; Although shown below as 2D paths 
this smoothing applies for 3D paths as well.&nbsp; Standard GCode and many CAD 
systems do not support arcs in arbitrary 3D space so small line segments are 
typically used to define the 3D path.&nbsp; Facet Angles in the original GCode 
data that are less than the specified Break Angle (which are considered &quot;small&quot; 
and will not cause a motion stop) will be re-faceted with smaller line segments 
along a curve to have Facet Angles smaller than the specified amount.&nbsp; The 
new line segments will be placed along the largest arc that will&nbsp; not 
deviate more than the specified Corner Tolerance or consume more than 1/2 of the 
segment length.&nbsp; If no Corner Rounding is desired the Corner Tolerance can 
be set to zero.</font></p>
<p>&nbsp;
</p>
<p>
<font face="Arial">
<img border="0" src="KMotionCNCfiles/FacetAngle.png" width="462" height="191"></font></p>
<p><font face="Arial"><img border="0" src="KMotionCNCfiles/CornerTol.png" width="462" height="191"></font></p>
<p><font face="Arial">Shown below is an example motion path where the 
bottom right arc is formed by 30 line segments.&nbsp; Normally a simple arc 
could be specified but for test purposes it was created with 30 3 degree angle 
facets forming the 90 degree turn.&nbsp; The tests below were performed 
simulating a fairly high performance system with 30 in/sec<sup>2</sup> 
acceleration in both X and Y.&nbsp; The Gcode used can be downloaded
<a href="KMotionCNCfiles/TESTCURVEOFTERROR3DEG.NC">here</a>.</font></p>
<p><font face="Arial">Here is the path Overview.</font></p>
<p><font face="Arial">
<img border="0" src="KMotionCNCfiles/TestCurveZoomOut.png" width="780" height="542"></font></p>
<p>&nbsp;</p>
<p><font face="Arial">Notice the circled region of the path looks 
smooth, but when zooming in as shown below the 3-degree angle facets are just 
barely visible.&nbsp; This resolution is typically used to provide a reasonably 
smooth path without making the file size abnormally large.</font></p>
<p>&nbsp;</p>
<p><font face="Arial">
<img border="0" src="KMotionCNCfiles/Facets3degrees.png" width="780" height="542"></font></p>
<p>&nbsp;</p>
<p><font face="Arial">In the plot below the Corner Rounding is enabled 
and the facets are now reduced in size and form 0.5 degree angles that can now 
no longer be seen.</font></p>
<p><font face="Arial">
<img border="0" src="KMotionCNCfiles/Facets0.5degrees.png" width="780" height="542"></font></p>
<p>&nbsp;</p>
<p><font face="Arial">To see more clearly the improvement the X Axis 
motion was captured in real-time (180us sample rate) and plotted.&nbsp; From the 
position the Velocity and Acceleration were also computed and plotted. </font></p>
<p><font face="Arial">First the original captured motion X axis position, 
velocity, and acceleration vs. time through the original 3-degree facets with no 
corner rounding. </font></p>
<p><font face="Arial">Note that the velocity plot has an odd shape for 
several 
reasons.&nbsp; At constant velocity the facet angle change causes the x 
velocity to drop while the y velocity increases, but since we are 
accelerating through the curve (because a more diagonal direction can make use of 
the increased (combined) acceleration of both axes) the velocity ramps up at the 
max acceleration toward the beginning of each facet.&nbsp; The programmed feed rate is 400ipm (6.67ips) but the speed is acceleration limited by the 
curvature of the path, hence the deceleration to ~ 5.5ips on the left as we enter the curve.</font></p>
<p><font face="Arial"><img border="0" src="KMotionCNCfiles/Pos3degree.png"></font></p>
<p><font face="Arial"><img border="0" src="KMotionCNCfiles/Vel3deg.png"></font></p>
<p><font face="Arial"><img border="0" src="KMotionCNCfiles/Accel3deg.png"></font></p>
<p>&nbsp;</p>
<p><font face="Arial">Now using the Trajectory Planner settings shown 
below.&nbsp; Notice the velocity is much smoother and the Acceleration is less 
Jerky.</font></p>
<p>
<font face="Arial">
<img border="0" src="KMotionCNCfiles/TJPSettings.png"></font></p>
<p><font face="Arial"><img border="0" src="KMotionCNCfiles/Pos0.5.png"></font></p>
<p><font face="Arial"><img border="0" src="KMotionCNCfiles/Vel0.5.png"></font></p>
<p><font face="Arial"><img border="0" src="KMotionCNCfiles/Accel0.5.png"></font></p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p><font face="Arial">For still further motion smoothing an additional 
KFLOP feature can be used.&nbsp; A low pass filter can be applied to the output 
of the coordinated motion path.</font></p>
<p><font face="Arial">The Low Pass Filter will be applied 
to all axes of coordinated motion (up to 8) by setting the KLP coefficient within KFLOP.&nbsp; 
Currently a C Program must be used to set this global parameter.
</font></p>
<p><font face="Arial">To compute an appropriate coefficient from a time constant 
Tau in seconds use the formula&nbsp; KLP = exp(-TIMEBASE/Tau) as shown below</font></p>
<font SIZE="2">
<p></p>
</font>
<p><font face="Courier New" size="2">#include &quot;KMotionDef.h&quot;<br>
main()<br>
{<br>
&nbsp;&nbsp;&nbsp; double Tau = 0.001; // seconds for Low Pass Filter Time 
Constant<br>
&nbsp;&nbsp;&nbsp; KLP = exp(-TIMEBASE/Tau);<br>
&nbsp;&nbsp;&nbsp; printf(&quot;Tau=%f KLP=%f\n&quot;,Tau,KLP);<br>
}</font></p>
<p><font face="Arial">Note the Velocity and Acceleration plots are even 
smoother.&nbsp; A low pass time constant Tau = 1 millisecond was used. </font></p>
<p><font face="Arial"><img border="0" src="KMotionCNCfiles/PosLP001.png"></font></p>
<p><font face="Arial"><img border="0" src="KMotionCNCfiles/VelLP001.png"></font></p>
<p><font face="Arial"><img border="0" src="KMotionCNCfiles/AccelLP001.png"></font></p>
<p>&nbsp;</p>
<p><font face="Arial">The disadvantage associated with low pass filtering of the 
trajectory is a potential lag in the commanded positions which may cause small path errors.&nbsp; 
The plots shown below show that a Low Pass Filter setting of 1 millisecond will 
be insignificant for most systems. A nearly worst case 90-degree angle with max 
deceleration on the X axis, followed by max acceleration on the Y axis are shown 
below.</font></p>
<p><font face="Arial">The first case is captured with no Low Pass 
Filtering.&nbsp; Note a perfectly square corner.&nbsp; Each tick mark shows a 
captured 180us sample point.</font></p>
<p><font face="Arial"><img border="0" src="KMotionCNCfiles/CornerLPoff.png"></font></p>
<p>&nbsp;</p>
<p><font face="Arial">The case below is with 1 millisecond of filtering with a path error of ~ 0.01 
mil (0.25um)</font></p>
<p><font face="Arial"><img border="0" src="KMotionCNCfiles/CornerLP001.png"></font></p>
<p>&nbsp;</p>
<p><font face="Arial">The case below is with 3 milliseconds of filtering with a path error of ~ 0.1 
mil (2.5um)</font></p>
<p><font face="Arial"><img border="0" src="KMotionCNCfiles/CornerLP003.png"></font></p>
<p>&nbsp;</p>
<p><font face="Arial">Because the Low Pass Smoothing introduces a small position 
lag the very end of the smoothed path will not be completed when the coordinated 
path is completed.&nbsp; To complete the path the final position and velocity of 
each of the coordinated axes are used to calculate a Cubic Spline to complete 
the final small motion.&nbsp; The Cubic Spline allows continuous velocity from 
the end of the smoothed path to the target position in a manner where the 
velocity also reaches zero at the target position.&nbsp; A Time duration of the 
Cubic Spline set at 2xTau of the low pass filter provides a relatively constant 
deceleration to the Target. </font></p>
<p>&nbsp;</p>
<p>
<img border="0" src="KMotionCNCfiles/SmoothedSplineEnding.png" width="803" height="533"></p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>

</body>

</html>
